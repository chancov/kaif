const { checkUserRole, checkIfTableExists, getUserRole, getRoleName, getRoleNamezov } = require('./roles.js');

module.exports = {
    command: '/zov',
    aliases: ['/–∑–æ–≤', '/–≤—ã–∑–æ–≤'],
    description: '–ú–∞—Å—Å–æ–≤–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–µ—Å–µ–¥–µ',
    async execute(context) {
        const messageText = context.text;
        const { peerId, senderId, replyMessage } = context;
        const parts = messageText.split(' ');
        const senderUserRole = await getUserRole(peerId, senderId);
        const reason = parts.slice(1).join(' ');
        const { checkUserRole, checkIfTableExists } = require('./roles.js');
        if (!await checkIfTableExists(`nicknames_${peerId}`)) {
            console.error('–¢–∞–±–ª–∏—Ü–∞ –Ω–∏–∫–Ω–µ–π–º–æ–≤ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
            return context.send('–í–∞—à–∞ –±–µ—Å–µ–¥–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞!');
        }
        const conversationMembers = await vk.api.messages.getConversationMembers({
            peer_id: context.peerId,
        });

        if (senderUserRole < 20) {
            const roleName = getRoleName(senderUserRole);
            return context.reply(`‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–æ–ª—å: ${roleName}`);
        }
        if (!reason) {
            return context.reply('‚ùå –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏—á–∏–Ω—É –≤—ã–∑–æ–≤–∞');
        }

        const memberProfiles = conversationMembers.profiles; // –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
        let message = '';

        for (const member of memberProfiles) {
            const name = `[id${member.id}|‚òëÔ∏è]`;
            message += `${name} `;
        }

        const role = await getRoleNamezov(senderUserRole);
        const pingMessage = await context.send(`–ü–∏–Ω–≥: ${message}`);
		console.log(pingMessage)
		console.log(pingMessage.conversationMessageId)
		let pingidmsg = pingMessage.conversationMessageId
		console.log(pingidmsg)
        const editedMessage = `
	üîä –í—ã –±—ã–ª–∏ –≤—ã–∑–≤–∞–Ω—ã [id${senderId}|–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º] –±–µ—Å–µ–¥—ã.

–ü—Ä–∏—á–∏–Ω–∞: ${reason}!‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨‚Äã‚Å¨
`;
        await vk.api.messages.edit({
            peer_id: context.peerId,
            message: editedMessage,
            conversation_message_id: pingidmsg,
        });
    },
};
