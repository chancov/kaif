const database = require('../databases.js');
const { checkUserRole, checkIfTableExists, getUserRole } = require('./roles.js');

module.exports = {
  command: '/mute',
  aliases: ['/–º—É—Ç', '!–º—É—Ç', '!mute'],
  description: '–í—ã–¥–∞—á–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',
  async execute(context) {
    const { peerId, senderId, text, replyMessage } = context;

    if (!await checkIfTableExists(`roles_${peerId}`)) {
      return context.send('‚ùì –ë–µ—Å–µ–¥–∞ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–µ—Å–µ–¥—ã, –≤–≤–µ–¥–∏—Ç–µ /start');
    }

    const senderUserRole = await getUserRole(peerId, context.senderId);

    if (senderUserRole < 20) {
      return context.reply('‚ùì –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!\n‚ùì –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ä–æ–ª—å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä');
    }

    let target;
    let muteMinutes;
    let reason;
    let numericId;

    if (replyMessage) {
      const parts = text.split(' ');
      target = replyMessage.senderId;
      numericId = replyMessage.senderId;
      muteMinutes = parseInt(parts[1]) || 1;
      reason = parts.slice(2).join(' ') || '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ ‚ùå';
    } else {
      const parts = text.split(' ');
      target = parts[1];
      numericId = await extractNumericId(parts[1]); // –ó–¥–µ—Å—å –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è await extractNumericId, —Ç.–∫. numericId —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      muteMinutes = parseInt(parts[2]) || 1;
      reason = parts.slice(3).join(' ') || '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ ‚ùå';
    }

    if (!target) {
      return context.reply(`‚ùì –ê—Ä–≥—É–º–µ–Ω—Ç—ã –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —á–∞—Ç–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.\n‚ùì –ü—Ä–∏–º–µ—Ä: /mute @id1 3600`);
    }

    const targetUserRole = await getUserRole(peerId, target);

    if (senderUserRole <= targetUserRole) {
      return context.reply('‚ùì –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —á–∞—Ç–∞ –¥–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é');
    }

    const currentDate = new Date();
    const muteUntil = new Date(currentDate.getTime() + muteMinutes * 1000);
    
    const muteInfo = {
      muted_user_id: numericId,
      muted_by: senderId,
      mute_until: muteUntil,
      reason: reason,
    };
    
    if (!mutedUsersInfo[peerId]) {
      mutedUsersInfo[peerId] = {};
    }
    
    mutedUsersInfo[peerId][numericId] = muteInfo;
    
    vk.api.messages.changeConversationMemberRestrictions({ peer_id: context.peerId, member_ids: numericId, for: muteMinutes, action: "ro" });
    
    function formatDate(date) {
      const months = ['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'];
      const month = months[date.getMonth()];
      const day = date.getDate();
      const year = date.getFullYear();
      let hours = date.getHours();
      let minutes = date.getMinutes();
      
      // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–µ–¥—É—â–µ–≥–æ –Ω—É–ª—è, –µ—Å–ª–∏ –º–∏–Ω—É—Ç—ã –º–µ–Ω—å—à–µ 10
      if (minutes < 10) {
        minutes = '0' + minutes;
      }
      
      return `${day} ${month} ${year} –≥. ${hours}:${minutes} –ú–°–ö`;
    }
    
    const formattedDate = formatDate(muteUntil);
    context.reply(`üîá [id${numericId}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é] –∑–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ ${formattedDate}.\n‚ùì –ü—Ä–∏—á–∏–Ω–∞: ${muteInfo.reason}`);
  },
};
