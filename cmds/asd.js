const axios = require('axios');

const GENIUS_API_BASE_URL = 'https://api.genius.com';
const GENIUS_ACCESS_TOKEN = 'OeM_n79_9-X2pcjwAT_Tr2Rc54wtx-uugz-hmBYAINms8edJQwVhaFaqh1LlnsAm';

async function searchLyricsBySongTitle(songTitle) {
  try {
    const response = await axios.get(`${GENIUS_API_BASE_URL}/search`, {
      params: {
        q: songTitle,
        access_token: GENIUS_ACCESS_TOKEN,
      },
    });

    if (response.status === 200) {
      const hits = response.data.response.hits;

      if (hits.length > 0) {
        const song = hits[0].result;
        const songLyrics = await getSongLyrics(song.api_path);
        return songLyrics;
      } else {
        return '‚ùå –ü–µ—Å–Ω—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.';
      }
    } else {
      return '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ Genius API';
    }
  } catch (error) {
    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', error.message);
    return '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Å–Ω–∏';
  }
}

async function getSongLyrics(apiPath) {
  try {
    // –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø–µ—Å–Ω–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥—É—é —Ç–µ—Ö–Ω–∏–∫—É,
    // —Ç–∞–∫ –∫–∞–∫ Genius API –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ –∏—Ö API
    // –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –ø–æ–ª—É—á–∏–º URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ç–µ–∫—Å—Ç–æ–º
    const response = await axios.get(`${GENIUS_API_BASE_URL}${apiPath}`, {
      params: {
        access_token: GENIUS_ACCESS_TOKEN,
        text_format: 'plain', // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ plain —Ñ–æ—Ä–º–∞—Ç–µ
      },
    });

    if (response.status === 200) {
      const songData = response.data.response.song;
      
      // –í–µ—Ä–Ω–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Å–Ω–µ –∏ URL —Å —Ç–µ–∫—Å—Ç–æ–º
      return {
        title: songData.title,
        artist: songData.primary_artist.name,
        url: songData.url,
        thumbnail: songData.song_art_image_thumbnail_url,
        release_date: songData.release_date,
        // –ï—Å–ª–∏ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ (–≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–ª—É—á–∞—è—Ö)
        lyrics: songData.description ? songData.description.plain : null
      };
    } else {
      return '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Å–Ω–∏';
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Å–Ω–∏:', error.message);
    return '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Å–Ω–∏';
  }
}

module.exports = {
  command: '/find',
  aliases: ['/–ø–æ–∏—Å–∫'],
  description: '–ü–æ–∏—Å–∫ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Å–Ω–∏',
  async execute(context) {
    const messageText = context.text;
    const parts = messageText.split(' ');

    const songTitle = parts.slice(1).join(' ');
    if (!songTitle) {
      return context.send('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏.');
    }

    try {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
      await context.send('üîç –ò—â—É —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏...');

      // –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞
      const result = await searchLyricsBySongTitle(songTitle);

      if (typeof result === 'string') {
        // –ï—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–∞—Å—å —Å—Ç—Ä–æ–∫–∞ —Å –æ—à–∏–±–∫–æ–π
        return context.send(result);
      } else if (result && result.url) {
        // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ø–µ—Å–Ω—é
        let message = `üéµ ${result.title} - ${result.artist}\n`;
        message += `üìÖ –î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞: ${result.release_date || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n`;
        message += `üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–∫—Å—Ç: ${result.url}`;
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –º–∏–Ω–∏–∞—Ç—é—Ä–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å —Ñ–æ—Ç–æ
        if (result.thumbnail) {
          return context.send({
            message: message,
            attachment: result.thumbnail
          });
        } else {
          return context.send(message);
        }
      } else {
        return context.send('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Å–Ω–µ.');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /find:', error);
      return context.send('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–µ—Å–Ω–∏.');
    }
  },
};