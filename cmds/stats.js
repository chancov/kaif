const database = require("../databases.js");
const {
  checkUserRole,
  checkIfTableExists,
  getUserRole,
  getRoleName,
  getRoleNamezov,
  getUserVipStatus,
} = require("./roles.js");

module.exports = {
  command: "/stats",
  aliases: ["/stats"],
  description: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
  async execute(context) {
    const { peerId, senderId, text, replyMessage } = context;
    const senderUserRole = await getUserRole(peerId, senderId);
    if (senderUserRole < 20) {
      return context.reply(
        "‚ùå –û—Ç–∫–∞–∑–∞–Ω–æ, –≤–∞—à–∞ —Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–∞—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã."
      );
    }
    let target;
    let targetUserRole;
    if (replyMessage) {
      const parts = text.split(" ");
      target = replyMessage.senderId;
      targetUserRole = await getUserRole(peerId, target);
    } else {
      const parts = text.split(" ");
      target = await extractNumericId(parts[1]);
      console.log(target);
      targetUserRole = await getUserRole(peerId, target);
    }

    if (!(await checkIfTableExists(`conference_${peerId}`))) {
      console.error("–¢–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
      return context.send("‚ùå –ë–µ—Å–µ–¥–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞!");
    }

    if (!target) {
      return context.reply(
        "‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞–º –Ω—É–∂–Ω–∞."
      );
    }

    // –ü–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const selectUserInfoQuery = `
      SELECT messages_count, warns
      FROM conference_${peerId}
      WHERE user_id = ?
    `;

    database.query(selectUserInfoQuery, [target], async (error, results) => {
      if (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:", error);
        return context.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.");
      }

      if (results.length === 0) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        return context.reply("‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
      }

      const { messages_count, warns } = results[0];

      const rolename = getRoleName(targetUserRole);
      const warnsCountText = warns !== null ? warns : 0;
      const messagesCountText = messages_count !== null ? messages_count : 0;
      const vipstatus = await getUserVipStatus(target);
      const conversationInfo = await vk.api.messages.getConversationMembers({
        peer_id: peerId,
      });

      const currentUserInfo = conversationInfo.items.find(
        (item) => item.member_id === target
      );
      let date = new Date(currentUserInfo.join_date * 1000);

      var monthNames = [
        "—è–Ω–≤–∞—Ä—è",
        "—Ñ–µ–≤—Ä–∞–ª—è",
        "–º–∞—Ä—Ç–∞",
        "–∞–ø—Ä–µ–ª—è",
        "–º–∞—è",
        "–∏—é–Ω—è",
        "–∏—é–ª—è",
        "–∞–≤–≥—É—Å—Ç–∞",
        "—Å–µ–Ω—Ç—è–±—Ä—è",
        "–æ–∫—Ç—è–±—Ä—è",
        "–Ω–æ—è–±—Ä—è",
        "–¥–µ–∫–∞–±—Ä—è",
      ];

      var day = date.getDate();
      var month = monthNames[date.getMonth()];
      var year = date.getFullYear();
      var hours = date.getHours();
      var minutes = date.getMinutes();

      var formattedDate = `${day} ${month} ${year} –≥–æ–¥–∞ –≤ ${hours}:${minutes}`;

      const responseMessage = `‚≠ê –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ [id${target}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ]:\n\nüî∏ –°—Ç–∞—Ç—É—Å: ${rolename} ${vipstatus}\nüî∏ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${messagesCountText}\nüî∏ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${warnsCountText}/3\nüî∏ –î–∞—Ç–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: ${formattedDate}`;
      context.send(responseMessage);
    });
  },
};
